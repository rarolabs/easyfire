
/**********************************************************
 * .java
 * Represents a chat thread
 * Version: 1.0.1
 * Generated by Easyfire. Do not modify this code 
 **********************************************************/

package br.com.easyhome.easyfire.models;

import br.com.easyhome.easyfire.base.ModelEF;
import br.com.easyhome.easyfire.services.MembroServiceEF;

import br.com.easyhome.easyfire.delegates.EasyfireDelegate;



import com.google.firebase.database.Exclude;
import com.google.firebase.database.IgnoreExtraProperties;
import android.databinding.BaseObservable;
import android.support.annotation.NonNull;
import java.util.List;
import java.util.ArrayList;

import android.text.TextUtils;

@IgnoreExtraProperties
public class MembroEF implements ModelEF, Comparable<MembroEF>{
  
  public static final String COLLECTION = "membro";
  
  //Firebase attributes
  @Exclude
  private String key;
  
  @Exclude
  private List<Class> parents = new ArrayList<>();
  
  @Exclude
  private String[] parentKeys = new String[]{};


  
  //Title of the chat room
  private String title = "";
  
  //Last message in this thread
  private String lastMessage = "";
  
  //Timestamp of the last message
  private Long timestamp = 0L;
  

  //Construtores
  public MembroEF(){}
  
  public MembroEF(String key){
    this.key = key;
  }
  
  //Getters e Setters
  
  @Exclude
  public String getKey(){
    return this.key;
  }
  
  @Exclude
  public void setKey(String key){
    this.key = key;
  }
  
  @Exclude
  public List<Class> getParents(){
    return this.parents;
  }
  
  @Exclude
  public void setParents(List<Class> parents){
    this.parents = parents;
  }
  
  @Exclude
  public String[] getParentKeys(){
    return this.parentKeys;
  }
  
  @Exclude
  public void setParentKeys(String[] parentKeys){
    this.parentKeys = parentKeys;
  }
  
  @Exclude 
  public void addParentKey(Class clazz,String parentKey){
    this.parentKeys[getParentLevel(clazz)] = parentKey;
  }
  
  @Exclude
  public int getParentLevel(Class clazz){
    return this.parents.indexOf(clazz);
  }
  
  
  
  @Exclude
  public String getPath(){
      
    String path = COLLECTION.concat("/").concat(TextUtils.join("/",parentKeys));
    if(!path.endsWith("/")){
        path.concat("/");
    }
    
    return  path.concat(key);
  
  }

  
  
  
  
  
  public String getTitle(){
    return this.title;
  }
  
  

  public void setTitle(String title){
   this.title = title;
   
   
  } 

  
  
  
  public String getLastMessage(){
    return this.lastMessage;
  }
  
  

  public void setLastMessage(String lastMessage){
   this.lastMessage = lastMessage;
   
   
  } 

  
  
  
  public Long getTimestamp(){
    return this.timestamp;
  }
  
  

  public void setTimestamp(Long timestamp){
   this.timestamp = timestamp;
   
   
  } 

  	

  @Override
  public String toString() {
    return "MembroEF{" +
     "key='" + key + '\'' +
     ", title='" + title + '\'' +
     ", lastMessage='" + lastMessage + '\'' +
     ", timestamp='" + timestamp + '\'' +
     "}";
  }
  
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
        
    MembroEF membroEF = (MembroEF ) o;
        
    return key != null ? key.equals(membroEF.key) : membroEF.key == null;

  }
  
  public boolean equalsContent(Object o) {
      if (this == o) return true;
      if (o == null || getClass() != o.getClass()) return false;
      if (!super.equals(o)) return false;

      MembroEF membroEF = (MembroEF ) o;
      
      
      if (title != null ? !title.equals(membroEF.title) : membroEF.title != null) {
        return false;
      }
      
      if (lastMessage != null ? !lastMessage.equals(membroEF.lastMessage) : membroEF.lastMessage != null) {
        return false;
      }
      
      if (timestamp != null ? !timestamp.equals(membroEF.timestamp) : membroEF.timestamp != null) {
        return false;
      }
      
          
      return true;

  }
  
  @Override
  public int hashCode() {
    return key != null ? key.hashCode() : 0;
  }
  
  
  public boolean isChild(){
    return parents != null;
  }
  
  @Override
  public int compareTo(@NonNull MembroEF membroEF) {
      return this.key.compareTo(membroEF.getKey());
  }
  
  public void store(EasyfireDelegate<MembroEF> delegate){
      new MembroServiceEF().store(this,delegate);
  }

  public void delete(EasyfireDelegate<Boolean> delegate){
      new MembroServiceEF().delete(this,delegate);
  }
  
  
  
  
}
