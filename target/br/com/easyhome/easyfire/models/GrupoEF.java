
/**********************************************************
 * .java
 * Grupo de seguranca
 * Version: 1.0.1
 * Generated by Easyfire. Do not modify this code 
 **********************************************************/

package br.com.easyhome.easyfire.models;

import br.com.easyhome.easyfire.base.ModelEF;
import br.com.easyhome.easyfire.services.GrupoServiceEF;

import br.com.easyhome.easyfire.delegates.EasyfireDelegate;



import com.google.firebase.database.Exclude;
import com.google.firebase.database.IgnoreExtraProperties;
import android.databinding.BaseObservable;
import android.support.annotation.NonNull;
import java.util.List;
import java.util.ArrayList;

import android.text.TextUtils;

@IgnoreExtraProperties
public class GrupoEF implements ModelEF, Comparable<GrupoEF>{
  
  public static final String COLLECTION = "grupo";
  
  //Firebase attributes
  @Exclude
  private String key;
  
  @Exclude
  private List<Class> parents = new ArrayList<>();
  
  @Exclude
  private String[] parentKeys = new String[]{};


  
  //Foto do grupo
  private String avatar = "";
  
  //Descricao
  private String descricao = "";
  
  //Descricao
  private String nome = "";
  

  //Construtores
  public GrupoEF(){}
  
  public GrupoEF(String key){
    this.key = key;
  }
  
  //Getters e Setters
  
  @Exclude
  public String getKey(){
    return this.key;
  }
  
  @Exclude
  public void setKey(String key){
    this.key = key;
  }
  
  @Exclude
  public List<Class> getParents(){
    return this.parents;
  }
  
  @Exclude
  public void setParents(List<Class> parents){
    this.parents = parents;
  }
  
  @Exclude
  public String[] getParentKeys(){
    return this.parentKeys;
  }
  
  @Exclude
  public void setParentKeys(String[] parentKeys){
    this.parentKeys = parentKeys;
  }
  
  @Exclude 
  public void addParentKey(Class clazz,String parentKey){
    this.parentKeys[getParentLevel(clazz)] = parentKey;
  }
  
  @Exclude
  public int getParentLevel(Class clazz){
    return this.parents.indexOf(clazz);
  }
  
  
  
  @Exclude
  public String getPath(){
      
    String path = COLLECTION.concat("/").concat(TextUtils.join("/",parentKeys));
    if(!path.endsWith("/")){
        path.concat("/");
    }
    
    return  path.concat(key);
  
  }

  
  
  
  
  
  public String getAvatar(){
    return this.avatar;
  }
  
  

  public void setAvatar(String avatar){
   this.avatar = avatar;
   
   
  } 

  
  
  
  public String getDescricao(){
    return this.descricao;
  }
  
  

  public void setDescricao(String descricao){
   this.descricao = descricao;
   
   
  } 

  
  
  
  public String getNome(){
    return this.nome;
  }
  
  

  public void setNome(String nome){
   this.nome = nome;
   
   
  } 

  	

  @Override
  public String toString() {
    return "GrupoEF{" +
     "key='" + key + '\'' +
     ", avatar='" + avatar + '\'' +
     ", descricao='" + descricao + '\'' +
     ", nome='" + nome + '\'' +
     "}";
  }
  
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
        
    GrupoEF grupoEF = (GrupoEF ) o;
        
    return key != null ? key.equals(grupoEF.key) : grupoEF.key == null;

  }
  
  public boolean equalsContent(Object o) {
      if (this == o) return true;
      if (o == null || getClass() != o.getClass()) return false;
      if (!super.equals(o)) return false;

      GrupoEF grupoEF = (GrupoEF ) o;
      
      
      if (avatar != null ? !avatar.equals(grupoEF.avatar) : grupoEF.avatar != null) {
        return false;
      }
      
      if (descricao != null ? !descricao.equals(grupoEF.descricao) : grupoEF.descricao != null) {
        return false;
      }
      
      if (nome != null ? !nome.equals(grupoEF.nome) : grupoEF.nome != null) {
        return false;
      }
      
          
      return true;

  }
  
  @Override
  public int hashCode() {
    return key != null ? key.hashCode() : 0;
  }
  
  
  public boolean isChild(){
    return parents != null;
  }
  
  @Override
  public int compareTo(@NonNull GrupoEF grupoEF) {
      return this.key.compareTo(grupoEF.getKey());
  }
  
  public void store(EasyfireDelegate<GrupoEF> delegate){
      new GrupoServiceEF().store(this,delegate);
  }

  public void delete(EasyfireDelegate<Boolean> delegate){
      new GrupoServiceEF().delete(this,delegate);
  }
  
  
  
  
}
